//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';
import grOriginal from 'ra-language-greek';

const enResources = {
  resources: {
    Users: {
      name: 'Users',
      fields: {
        userId: 'User Id',
        name: 'Name',
        email: 'Email',
        password: 'Password',
        role: 'Role',
        id: 'id',
      },
    },
    Employees: {
      name: 'Employees',
      fields: {
        EmployeeID: 'Employee Id',
        FirstName: 'First Name',
        LastName: 'Last Name',
        MiddleName: 'Middle Name',
        DateOfBirth: 'Date Of Birth',
        Gender: 'Gender',
        Nationality: 'Nationality',
        MaritalStatus: 'Marital Status',
        ContactInformation: 'Contact Information',
        Address: 'Address',
        Department: 'Department',
        Position: 'Position',
        Manager: 'Manager',
        EmploymentType: 'Employment Type',
        StartDate: 'Start Date',
        EndDate: 'End Date',
        SalaryInformation: 'Salary Information',
        ProfilePicture: 'Profile Picture',
        id: 'id',
      },
    },
    Evaluations: {
      name: 'Evaluations',
      fields: {
        ReviewID: 'Review Id',
        EmployeeID: 'Employee Id',
        PeriodStart: 'Period Start',
        PeriodEnd: 'Period End',
        GoalsObjectives: 'Goals Objectives',
        Achievements: 'Achievements',
        ImprovementAreas: 'Improvement Areas',
        FeedbackfromSupervisor: 'Feedbackfrom Supervisor',
        OverallRating: 'Overall Rating',
        Recommendations: 'Recommendations',
        id: 'id',
      },
    },
    Payroll: {
      name: 'Payroll',
      fields: {
        PayrollID: 'Payroll Id',
        EmployeeID: 'Employee Id',
        PeriodStartDate: 'Period Start Date',
        PeriodEndDate: 'Period End Date',
        GrossSalary: 'Gross Salary',
        Deductions: 'Deductions',
        NetSalary: 'Net Salary',
        PayDate: 'Pay Date',
        OvertimeHours: 'Overtime Hours',
        OvertimePay: 'Overtime Pay',
        id: 'id',
      },
    },
    Leaverequests: {
      name: 'Leave Requests',
      fields: {
        RequestID: 'Request Id',
        EmployeeID: 'Employee Id',
        TypeofLeave: 'Typeof Leave',
        StartDate: 'Start Date',
        EndDate: 'End Date',
        Reason: 'Reason',
        ApprovalStatus: 'Approval Status',
        ApproverUserid: 'Approver Userid',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Users: {
      name: 'Users (fr)',
      fields: {
        userId: 'User Id (fr)',
        name: 'Name (fr)',
        email: 'Email (fr)',
        password: 'Password (fr)',
        role: 'Role (fr)',
        id: 'id',
      },
    },
    Employees: {
      name: 'Employees (fr)',
      fields: {
        EmployeeID: 'Employee Id (fr)',
        FirstName: 'First Name (fr)',
        LastName: 'Last Name (fr)',
        MiddleName: 'Middle Name (fr)',
        DateOfBirth: 'Date Of Birth (fr)',
        Gender: 'Gender (fr)',
        Nationality: 'Nationality (fr)',
        MaritalStatus: 'Marital Status (fr)',
        ContactInformation: 'Contact Information (fr)',
        Address: 'Address (fr)',
        Department: 'Department (fr)',
        Position: 'Position (fr)',
        Manager: 'Manager (fr)',
        EmploymentType: 'Employment Type (fr)',
        StartDate: 'Start Date (fr)',
        EndDate: 'End Date (fr)',
        SalaryInformation: 'Salary Information (fr)',
        ProfilePicture: 'Profile Picture (fr)',
        id: 'id',
      },
    },
    Evaluations: {
      name: 'Evaluations (fr)',
      fields: {
        ReviewID: 'Review Id (fr)',
        EmployeeID: 'Employee Id (fr)',
        PeriodStart: 'Period Start (fr)',
        PeriodEnd: 'Period End (fr)',
        GoalsObjectives: 'Goals Objectives (fr)',
        Achievements: 'Achievements (fr)',
        ImprovementAreas: 'Improvement Areas (fr)',
        FeedbackfromSupervisor: 'Feedbackfrom Supervisor (fr)',
        OverallRating: 'Overall Rating (fr)',
        Recommendations: 'Recommendations (fr)',
        id: 'id',
      },
    },
    Payroll: {
      name: 'Payroll (fr)',
      fields: {
        PayrollID: 'Payroll Id (fr)',
        EmployeeID: 'Employee Id (fr)',
        PeriodStartDate: 'Period Start Date (fr)',
        PeriodEndDate: 'Period End Date (fr)',
        GrossSalary: 'Gross Salary (fr)',
        Deductions: 'Deductions (fr)',
        NetSalary: 'Net Salary (fr)',
        PayDate: 'Pay Date (fr)',
        OvertimeHours: 'Overtime Hours (fr)',
        OvertimePay: 'Overtime Pay (fr)',
        id: 'id',
      },
    },
    Leaverequests: {
      name: 'Leave Requests (fr)',
      fields: {
        RequestID: 'Request Id (fr)',
        EmployeeID: 'Employee Id (fr)',
        TypeofLeave: 'Typeof Leave (fr)',
        StartDate: 'Start Date (fr)',
        EndDate: 'End Date (fr)',
        Reason: 'Reason (fr)',
        ApprovalStatus: 'Approval Status (fr)',
        ApproverUserid: 'Approver Userid (fr)',
        id: 'id',
      },
    },
  },
};
const grResources = {
  resources: {
    Users: {
      name: 'Users (gr)',
      fields: {
        userId: 'User Id (gr)',
        name: 'Name (gr)',
        email: 'Email (gr)',
        password: 'Password (gr)',
        role: 'Role (gr)',
        id: 'id',
      },
    },
    Employees: {
      name: 'Employees (gr)',
      fields: {
        EmployeeID: 'Employee Id (gr)',
        FirstName: 'First Name (gr)',
        LastName: 'Last Name (gr)',
        MiddleName: 'Middle Name (gr)',
        DateOfBirth: 'Date Of Birth (gr)',
        Gender: 'Gender (gr)',
        Nationality: 'Nationality (gr)',
        MaritalStatus: 'Marital Status (gr)',
        ContactInformation: 'Contact Information (gr)',
        Address: 'Address (gr)',
        Department: 'Department (gr)',
        Position: 'Position (gr)',
        Manager: 'Manager (gr)',
        EmploymentType: 'Employment Type (gr)',
        StartDate: 'Start Date (gr)',
        EndDate: 'End Date (gr)',
        SalaryInformation: 'Salary Information (gr)',
        ProfilePicture: 'Profile Picture (gr)',
        id: 'id',
      },
    },
    Evaluations: {
      name: 'Evaluations (gr)',
      fields: {
        ReviewID: 'Review Id (gr)',
        EmployeeID: 'Employee Id (gr)',
        PeriodStart: 'Period Start (gr)',
        PeriodEnd: 'Period End (gr)',
        GoalsObjectives: 'Goals Objectives (gr)',
        Achievements: 'Achievements (gr)',
        ImprovementAreas: 'Improvement Areas (gr)',
        FeedbackfromSupervisor: 'Feedbackfrom Supervisor (gr)',
        OverallRating: 'Overall Rating (gr)',
        Recommendations: 'Recommendations (gr)',
        id: 'id',
      },
    },
    Payroll: {
      name: 'Payroll (gr)',
      fields: {
        PayrollID: 'Payroll Id (gr)',
        EmployeeID: 'Employee Id (gr)',
        PeriodStartDate: 'Period Start Date (gr)',
        PeriodEndDate: 'Period End Date (gr)',
        GrossSalary: 'Gross Salary (gr)',
        Deductions: 'Deductions (gr)',
        NetSalary: 'Net Salary (gr)',
        PayDate: 'Pay Date (gr)',
        OvertimeHours: 'Overtime Hours (gr)',
        OvertimePay: 'Overtime Pay (gr)',
        id: 'id',
      },
    },
    Leaverequests: {
      name: 'Leave Requests (gr)',
      fields: {
        RequestID: 'Request Id (gr)',
        EmployeeID: 'Employee Id (gr)',
        TypeofLeave: 'Typeof Leave (gr)',
        StartDate: 'Start Date (gr)',
        EndDate: 'End Date (gr)',
        Reason: 'Reason (gr)',
        ApprovalStatus: 'Approval Status (gr)',
        ApproverUserid: 'Approver Userid (gr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);
const gr = mergeTranslations(grOriginal, grResources);

const translations = { en, fr, gr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Français' },
    { locale: 'gr', name: 'Ελληνικά' },
  ],
);
